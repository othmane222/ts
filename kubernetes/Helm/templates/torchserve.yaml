# torchserve.yml (Corrected Final Version)
---
apiVersion: v1
kind: Service
metadata:
  name: torchserve
  labels:
    app: torchserve
spec:
  type: NodePort
  ports:
  - name: preds
    port: {{ .Values.torchserve.inference_port }}
    targetPort: ts
  - name: mdl
    port: {{ .Values.torchserve.management_port }}
    targetPort: ts-management
    nodePort: 30176
  selector:
    app: torchserve
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: torchserve
  labels:
    app: torchserve
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: torchserve
  template:
    metadata:
      labels:
        app: torchserve
    spec:
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          # Use the name from values.yaml
          claimName: {{ .Values.pvc.name }}
      - name: config-properties-volume
        configMap:
          # Use the name from values.yaml
          name: {{ .Values.configmap.name }}
      # --- ADD THIS ENTIRE SECTION ---
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - torchserve
      #       topologyKey: "kubernetes.io/hostname"
      # # ----------------------------------------
      initContainers:
      - name: set-volume-permissions
        image: busybox:1.36
        command: ["/bin/sh", "-c"]
        args: 
          - |
            # Create the model-store directory if it doesn't exist
            mkdir -p /home/model-server/shared/model-store
            
            # The 'model-server' user inside the torchserve container needs to own this directory.
            # We run this command as root to fix the ownership.
            chown -R 1000:1000 /home/model-server/shared
        volumeMounts:
        - name: persistent-storage
          mountPath: {{ .Values.torchserve.pvd_mount }}
      # ------------------------------

      containers:
      - name: torchserve
        image: {{ .Values.torchserve_image }}
        # securityContext:
        #   runAsUser: 0
        # --- THE FULLY EXPLICIT COMMAND ---
        # We are now telling TorchServe EVERYTHING directly.
        command: ["/bin/bash", "-c"]
        args:
          - |
            # Using backslashes for readability
            torchserve --start \
              --ts-config /home/model-server/config.properties \
              --model-store /home/model-server/shared/model-store \
              --disable-token-auth \
              --enable-model-api &
            tail -f /dev/null

        ports:
        - name: ts
          containerPort: {{ .Values.torchserve.inference_port }}
        - name: ts-management
          containerPort: {{ .Values.torchserve.management_port }}
        
        volumeMounts:
        - mountPath: {{ .Values.torchserve.pvd_mount }}
          name: persistent-storage
        - name: config-properties-volume
          mountPath: /home/model-server/config.properties
          subPath: config.properties

        resources:
          limits:
            cpu: {{ .Values.torchserve.n_cpu }}
            memory: {{ .Values.torchserve.memory_limit }}
          requests:
            cpu: {{ .Values.torchserve.n_cpu }}
            memory: {{ .Values.torchserve.memory_request }}